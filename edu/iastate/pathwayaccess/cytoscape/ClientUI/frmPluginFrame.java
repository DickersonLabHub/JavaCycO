package edu.iastate.pathwayaccess.cytoscape.ClientUI;

import edu.iastate.pathwayaccess.cytoscape.*;
import edu.iastate.pathwayaccess.cytoscape.ClientUI.pnlMainPanel;
import java.awt.CardLayout;

/**
 *
 * @author Greg
 */
public class frmPluginFrame extends javax.swing.JFrame {

    /**
     * Stub: all methods for accessing the database
     */
    private PathwayAccessPlugin databaseAccess = null;
    /**
     * Stores the window manager to call when next or back buttons are pressed
     */
    private WindowManager winManager;
    /**
     * Properties for the current database
     */
    private PluginProperties properties = null;
    /**
     * Main panel used for searching and displaying results
     */
    private pnlMainPanel mainPanel = null;

    /** 
     * Initializes the class with the given parameters but does not create the 
     * JFrame. To create the JFrame, showFrame() must be called.
     */
    protected frmPluginFrame(PathwayAccessPlugin database, WindowManager winManager, PluginProperties properties) {
        /* Create Global Variables: Only created once so results will still be
         * displayed after closing and re-opening this frame */
        //if(databaseAccess == null)
        //    databaseAccess = properties.getPathwayAccessPlugin();
        if(database == null || winManager == null || properties == null)
            throw new NullPointerException("Parameter cannot be null");
        databaseAccess = database;
        this.winManager = winManager;
        this.properties = properties;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                pnlLayout = new javax.swing.JPanel();
                jMenuBar1 = new javax.swing.JMenuBar();
                jMenu1 = new javax.swing.JMenu();
                menuCloseItem = new javax.swing.JMenuItem();
                jMenu2 = new javax.swing.JMenu();
                menuHelpItem = new javax.swing.JMenuItem();
                menuAboutItem = new javax.swing.JMenuItem();

                setTitle(properties.PLUGIN_TITLE);
                setMinimumSize(new java.awt.Dimension(680, 575));

                pnlLayout.setMinimumSize(new java.awt.Dimension(665, 500));
                pnlLayout.setLayout(new java.awt.CardLayout());

                jMenu1.setText("File");

                menuCloseItem.setText("Close");
                menuCloseItem.setToolTipText("Cancels any current tasks and closes the plugin");
                menuCloseItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                menuCloseItemActionPerformed(evt);
                        }
                });
                jMenu1.add(menuCloseItem);

                jMenuBar1.add(jMenu1);

                jMenu2.setText("Help");

                menuHelpItem.setText("Help Contents (Coming Soon)");
                menuHelpItem.setToolTipText("Displays the help contents for the plugin");
                menuHelpItem.setEnabled(false);
                jMenu2.add(menuHelpItem);

                menuAboutItem.setText("About");
                menuAboutItem.setToolTipText("Displays information about this plugin");
                menuAboutItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                menuAboutItemActionPerformed(evt);
                        }
                });
                jMenu2.add(menuAboutItem);

                jMenuBar1.add(jMenu2);

                setJMenuBar(jMenuBar1);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlLayout, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlLayout, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    /**
     * Called when the menu item for closing the plugin is selected. Cancels any 
     * tasks and closes the plugin frame.
     * @param evt Selection of the menu item for closing the plugin
     */
    private void menuCloseItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCloseItemActionPerformed
        winManager.cancel(true);
        winManager.close();
    }//GEN-LAST:event_menuCloseItemActionPerformed

    /**
     * Displays the plugin's about window
     * @param evt About menu item selection
     */
    private void menuAboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAboutItemActionPerformed
        About frmAbout = new About(databaseAccess, this);
        frmAbout.setVisible(true);
    }//GEN-LAST:event_menuAboutItemActionPerformed

    private boolean initialized = false;
    /**
     * Initializes the first JPanel to appear and makes the JFrame visible
     */
    protected void showFrame(pnlMainPanel mainPanel)
    {
        //Create a new Main Panel if null
        if(mainPanel == null)
            //mainPanel = new pnlMainPanel(databaseAccess, winManager, properties, this);
            throw new NullPointerException("Null Parameter");
        this.mainPanel = mainPanel;
        //Adjust frame size to the panel and initialize the frame
        this.setSize(mainPanel.getSize());
        if(!initialized)
        {
            initComponents();
            initialized = true;
        }
        //Display Main Panel
        pnlLayout.removeAll();
        pnlLayout.add(mainPanel, "MAIN");
        pnlLayout.setVisible(true);
        CardLayout cl = (CardLayout)(pnlLayout.getLayout());
        cl.show(pnlLayout, "MAIN");
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JMenu jMenu1;
        private javax.swing.JMenu jMenu2;
        private javax.swing.JMenuBar jMenuBar1;
        private javax.swing.JMenuItem menuAboutItem;
        private javax.swing.JMenuItem menuCloseItem;
        private javax.swing.JMenuItem menuHelpItem;
        private javax.swing.JPanel pnlLayout;
        // End of variables declaration//GEN-END:variables

}
